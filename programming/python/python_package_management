# python package management
# It is suggested to install pyenv to manage python versions

# List available python versions to install
pyenv install --list

# Install a python version
pyenv install 3.8.0

# List installed python versions
pyenv versions

# Switch globally to a specific python version
pyenv global 3.8.0

# Switch locally to a specific python version
pyenv shell 2.7.15

# Create a virtual environment
python -m venv env

# Activate a virtual environment
source ./env/bin/activate

# Deactivate a virtual environment
deactivate

# To search for a package
pip search <package>

# To install packages
pip install <package>

# To uninstall packages
pip uninstall <package>

# To install a package in user space (default)
pip install --user <package>

# To upgrade a package
pip install --upgrade <package>

# To list currently installed packages
pip freeze --all
or
pip list

# To output and install packages in a requirement file
pip freeze > requirements.txt
pip install -r requirements.txt

# To show details of a package
pip show <package>

# To list outdated packages
pip list --outdated

# To upgrade all outdated packages
pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U

# To upgrade outdated packages on latest version of pip
pip list --outdated --format=freeze | cut -d = -f 1 | xargs -n1 pip install -U

# To install specific version of a package
pip install -I SomePackage1==1.1.0 'SomePackage2>=1.0.4'
